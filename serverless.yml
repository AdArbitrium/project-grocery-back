# serverless.yml

service: serverless-flask-grocerybackend

plugins:

  - serverless-python-requirements

  - serverless-wsgi


custom:

  tableName: 'cards-table-${self:provider.stage}'

  wsgi:

    app: entry.app

    packRequirements: false

  pythonRequirements:

    dockerizePip: non-linux


provider:

  name: aws

  runtime: python3.6

  stage: dev

  region: us-west-2

  iamRoleStatements:

    - Effect: Allow

      Action:

        - dynamodb:Query

        - dynamodb:Scan

        - dynamodb:GetItem

        - dynamodb:PutItem

        - dynamodb:UpdateItem

        - dynamodb:DeleteItem

      Resource:

        - { "Fn::GetAtt": ["CardsDynamoDBTable", "Arn" ] }

  environment:

    CARDS_TABLE: ${self:custom.tableName}


functions:

  app:

    handler: wsgi.handler

    events:

      - http: ANY /

      - http: 'ANY {proxy+}'


resources:

  Resources:

    CardsDynamoDBTable:

      Type: 'AWS::DynamoDB::Table'

      Properties:

        AttributeDefinitions:

          -

            AttributeName: itemName

            AttributeType: S

        KeySchema:

          -

            AttributeName: itemName

            KeyType: HASH

        ProvisionedThroughput:

          ReadCapacityUnits: 1

          WriteCapacityUnits: 1

        TableName: ${self:custom.tableName}